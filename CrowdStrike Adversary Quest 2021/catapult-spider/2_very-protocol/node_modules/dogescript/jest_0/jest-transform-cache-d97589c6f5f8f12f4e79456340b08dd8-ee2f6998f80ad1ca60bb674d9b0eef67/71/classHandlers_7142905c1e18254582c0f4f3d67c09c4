63ceeecbca2c445cd19a6b6c06f1e9fc
/* istanbul ignore next */
"use strict";

var cov_2ebyrr47xv = function () {
  var path = "/mnt/j/Workspaces/dogescript/lib/handlers/classHandlers.js";
  var hash = "2fc8cc3acba65f04db851fe4b150e2c06a36ad05";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/j/Workspaces/dogescript/lib/handlers/classHandlers.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 46
        }
      },
      "1": {
        start: {
          line: 2,
          column: 19
        },
        end: {
          line: 2,
          column: 50
        }
      },
      "2": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 51
        }
      },
      "3": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "4": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "6": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 25
        }
      },
      "7": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "8": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "9": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "10": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 31
        }
      },
      "11": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 38,
          column: 7
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 23
        }
      },
      "14": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 21
        }
      },
      "15": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "16": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "17": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "18": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 72
        }
      },
      "19": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 50
        }
      },
      "20": {
        start: {
          line: 73,
          column: 17
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "21": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 19
        }
      },
      "22": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "23": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 132
        }
      },
      "24": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 39
        }
      },
      "25": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "26": {
        start: {
          line: 95,
          column: 17
        },
        end: {
          line: 95,
          column: 36
        }
      },
      "27": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "28": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "29": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 140
        }
      },
      "30": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 104,
          column: 35
        }
      },
      "31": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 41
        }
      },
      "32": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 48
        }
      },
      "33": {
        start: {
          line: 118,
          column: 17
        },
        end: {
          line: 118,
          column: 36
        }
      },
      "34": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 19
        }
      },
      "35": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "36": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 151
        }
      },
      "37": {
        start: {
          line: 127,
          column: 21
        },
        end: {
          line: 127,
          column: 35
        }
      },
      "38": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "39": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 179
        }
      },
      "40": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "41": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "42": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 155
        }
      },
      "43": {
        start: {
          line: 142,
          column: 23
        },
        end: {
          line: 142,
          column: 37
        }
      },
      "44": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 51
        }
      },
      "45": {
        start: {
          line: 148,
          column: 0
        },
        end: {
          line: 150,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "handleClass",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 20
          }
        },
        loc: {
          start: {
            line: 11,
            column: 35
          },
          end: {
            line: 43,
            column: 3
          }
        },
        line: 11
      },
      "1": {
        name: "handleMaker",
        decl: {
          start: {
            line: 52,
            column: 11
          },
          end: {
            line: 52,
            column: 22
          }
        },
        loc: {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 52
      },
      "2": {
        name: "handleGrows",
        decl: {
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 70,
            column: 22
          }
        },
        loc: {
          start: {
            line: 70,
            column: 37
          },
          end: {
            line: 83,
            column: 3
          }
        },
        line: 70
      },
      "3": {
        name: "handleGit",
        decl: {
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 92,
            column: 18
          }
        },
        loc: {
          start: {
            line: 92,
            column: 33
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 92
      },
      "4": {
        name: "handleSit",
        decl: {
          start: {
            line: 115,
            column: 9
          },
          end: {
            line: 115,
            column: 18
          }
        },
        loc: {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 115
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 38,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 38,
            column: 7
          }
        }, {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 38,
            column: 7
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }],
        line: 78
      },
      "4": {
        loc: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }, {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }],
        line: 100
      },
      "5": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }],
        line: 123
      },
      "6": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }],
        line: 129
      },
      "7": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        }, {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        }],
        line: 137
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "2fc8cc3acba65f04db851fe4b150e2c06a36ad05"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var tokenUtils =
/* istanbul ignore next */
(cov_2ebyrr47xv.s[0]++, require('../util/tokenUtils'));
var handlerUtils =
/* istanbul ignore next */
(cov_2ebyrr47xv.s[1]++, require('../util/handlerUtils'));
/**
 * Handles class declarations:
 *   classy <ClassName>
 *
 * Produces:
 *   class <ClassName> {
 */

function handleClass(parseContext) {
  /* istanbul ignore next */
  cov_2ebyrr47xv.f[0]++;
  cov_2ebyrr47xv.s[2]++;
  tokenUtils.expectToken('classy', parseContext); // consume: classy

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[3]++;
  parseContext.tokens.shift();
  var tokens =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[4]++, parseContext.tokens);
  /**
   * We're in a class expression without extension
   */

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[5]++;

  if (tokens.length < 1) {
    /* istanbul ignore next */
    cov_2ebyrr47xv.b[0][0]++;
    cov_2ebyrr47xv.s[6]++;
    return "class {\n";
  } else
  /* istanbul ignore next */
  {
    cov_2ebyrr47xv.b[0][1]++;
  }

  var className =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[7]++, parseContext.tokens.shift());
  var statement =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[8]++, "class " + className);
  /**
   * Check if there's a grows ParentClassName
   */

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[9]++;

  if (tokens.length > 0) {
    /* istanbul ignore next */
    cov_2ebyrr47xv.b[1][0]++;
    var nextToken =
    /* istanbul ignore next */
    (cov_2ebyrr47xv.s[10]++, tokens[0]);

    /* istanbul ignore next */
    cov_2ebyrr47xv.s[11]++;

    if (nextToken == 'grows') {
      /* istanbul ignore next */
      cov_2ebyrr47xv.b[2][0]++;
      cov_2ebyrr47xv.s[12]++;
      statement += " " + handleGrows(parseContext);
    } else
    /* istanbul ignore next */
    {
      cov_2ebyrr47xv.b[2][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2ebyrr47xv.b[1][1]++;
  }

  cov_2ebyrr47xv.s[13]++;
  statement += "{\n";

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[14]++;
  return statement;
}
/**
 * Handles constructor declarations:
 * maker <args>
 *
 * Produces:
 *  constructor <args> {
 */


function handleMaker(parseContext) {
  /* istanbul ignore next */
  cov_2ebyrr47xv.f[1]++;
  cov_2ebyrr47xv.s[15]++;
  tokenUtils.expectToken('maker', parseContext);
  var tokens =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[16]++, parseContext.tokens); // consume: maker

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[17]++;
  tokens.shift();

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[18]++;
  return 'constructor' + handlerUtils.declareArguments(parseContext);
}
/**
 * Handles class extension declarations:
 * grows <ClassName>
 *
 * Produces:
 *  extends <ClassName>
 */


function handleGrows(parseContext) {
  /* istanbul ignore next */
  cov_2ebyrr47xv.f[2]++;
  cov_2ebyrr47xv.s[19]++;
  tokenUtils.expectToken('grows', parseContext);
  var tokens =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[20]++, parseContext.tokens); // consume: grows

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[21]++;
  tokens.shift();

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[22]++;

  if (tokens.length < 1) {
    /* istanbul ignore next */
    cov_2ebyrr47xv.b[3][0]++;
    cov_2ebyrr47xv.s[23]++;
    throw new SyntaxError(
    /* istanbul ignore next */
    "Expected ClassName but got nothing. Allowed construct: grows [ClassName]. ".concat(parseInfo(parseContext)));
  } else
  /* istanbul ignore next */
  {
    cov_2ebyrr47xv.b[3][1]++;
  }

  cov_2ebyrr47xv.s[24]++;
  return 'extends ' + tokens.shift();
}
/**
 * Handles getter method declarations:
 * git <name>
 * 
 * Produces:
 *  get <name> () {
 */


function handleGit(parseContext) {
  /* istanbul ignore next */
  cov_2ebyrr47xv.f[3]++;
  cov_2ebyrr47xv.s[25]++;
  tokenUtils.expectToken('git', parseContext);
  var tokens =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[26]++, parseContext.tokens); // consume: git

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[27]++;
  tokens.shift();

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[28]++;

  if (tokens.length < 1) {
    /* istanbul ignore next */
    cov_2ebyrr47xv.b[4][0]++;
    cov_2ebyrr47xv.s[29]++;
    throw new SyntaxError(
    /* istanbul ignore next */
    "Expected getter name but got nothing. Allowed construct: git [name]. ".concat(tokenUtils.parseInfo(parseContext)));
  } else
  /* istanbul ignore next */
  {
    cov_2ebyrr47xv.b[4][1]++;
  }

  var getterName =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[30]++, tokens.shift());

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[31]++;
  return 'get ' + getterName + " () {";
}
/**
 * Handles setter method declarations:
 * sit <name> with <arg>
 * 
 * Produces:
 *  set <name> (arg) {
 */


function handleSit(parseContext) {
  /* istanbul ignore next */
  cov_2ebyrr47xv.f[4]++;
  cov_2ebyrr47xv.s[32]++;
  tokenUtils.expectToken('sit', parseContext);
  var tokens =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[33]++, parseContext.tokens); // consume: sit

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[34]++;
  tokens.shift();

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[35]++;

  if (tokens.length < 1) {
    /* istanbul ignore next */
    cov_2ebyrr47xv.b[5][0]++;
    cov_2ebyrr47xv.s[36]++;
    throw new SyntaxError(
    /* istanbul ignore next */
    "Expected setter name but got nothing. Allowed construct: sit [name] with [arg]. ".concat(tokenUtils.parseInfo(parseContext)));
  } else
  /* istanbul ignore next */
  {
    cov_2ebyrr47xv.b[5][1]++;
  }

  var setterName =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[37]++, tokens.shift());

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[38]++;

  if (tokens[0] != 'with') {
    /* istanbul ignore next */
    cov_2ebyrr47xv.b[6][0]++;
    cov_2ebyrr47xv.s[39]++;
    throw new SyntaxError(
    /* istanbul ignore next */
    "Expected: 'with' but got: '".concat(tokens[0], "' from chain: [").concat(tokens, "]. Allowed construct: sit [name] with [arg]. ").concat(tokenUtils.parseInfo(parseContext)));
  } else
  /* istanbul ignore next */
  {
    cov_2ebyrr47xv.b[6][1]++;
  } // consume: with


  cov_2ebyrr47xv.s[40]++;
  tokens.shift();

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[41]++;

  if (tokens.length < 1) {
    /* istanbul ignore next */
    cov_2ebyrr47xv.b[7][0]++;
    cov_2ebyrr47xv.s[42]++;
    throw new SyntaxError(
    /* istanbul ignore next */
    "Expected setter argument but got nothing. Allowed construct: sit [name] with [arg]. ".concat(tokenUtils.parseInfo(parseContext)));
  } else
  /* istanbul ignore next */
  {
    cov_2ebyrr47xv.b[7][1]++;
  }

  var argumentName =
  /* istanbul ignore next */
  (cov_2ebyrr47xv.s[43]++, tokens.shift()); // TODO potentially call 'handleWith'

  /* istanbul ignore next */
  cov_2ebyrr47xv.s[44]++;
  return (
    /* istanbul ignore next */
    "set ".concat(setterName, " (").concat(argumentName, ") {")
  );
}

/* istanbul ignore next */
cov_2ebyrr47xv.s[45]++;
module.exports = {
  handleGit: handleGit,
  handleSit: handleSit,
  handleClass: handleClass,
  handleGrows: handleGrows,
  handleMaker: handleMaker
};
//# sourceMappingURL=data:application/json;base64,