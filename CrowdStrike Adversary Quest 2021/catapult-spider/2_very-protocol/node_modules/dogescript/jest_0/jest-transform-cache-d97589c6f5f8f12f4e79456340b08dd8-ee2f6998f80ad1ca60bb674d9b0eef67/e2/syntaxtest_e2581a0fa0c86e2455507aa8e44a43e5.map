{"version":3,"sources":["syntax.test.js"],"names":["expectInvalidSyntaxError","source","errorMessage","test","expect","toThrow","SyntaxError","describe","it"],"mappings":";;AAAA;;;;AAEA,SAASA,wBAAT,CAAkCC,MAAlC,EAA0CC,YAA1C,EAAwD;AACtD,MAAIC,IAAI,GAAG,SAAPA,IAAO,GAAW;AACpB,WAAO,uBAAWF,MAAX,EAAmB,IAAnB,CAAP;AACD,GAFD;;AAIAG,EAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,OAAb,CAAqB,IAAIC,WAAJ,CAAgBJ,YAAhB,CAArB;AACD;;AAGDK,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACnCA,EAAAA,QAAQ,CAAC,MAAD,EAAS,YAAW;AAC1BC,IAAAA,EAAE,CAAC,sDAAD,EAAyD,YAAY;AACrER,MAAAA,wBAAwB,CACtB,cADsB,EAEtB,8HAFsB,CAAxB;AAID,KALC,CAAF;AAOAQ,IAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAY;AAClER,MAAAA,wBAAwB,CACtB,aADsB,EAEtB,4HAFsB,CAAxB;AAIH,KALC,CAAF;AAOAQ,IAAAA,EAAE,CAAC,kEAAD,EAAqE,YAAW;AAC9ER,MAAAA,wBAAwB,CACtB,0BADsB,EAEtB,sJAFsB,CAAxB;AAIH,KALC,CAAF;AAMD,GArBO,CAAR;AAwBAO,EAAAA,QAAQ,CAAC,MAAD,EAAS,YAAW;AAC1BC,IAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAY;AAC5DR,MAAAA,wBAAwB,CACtB,YADsB,EAEtB,4HAFsB,CAAxB;AAID,KALC,CAAF;AAMD,GAPO,CAAR;AAUAO,EAAAA,QAAQ,CAAC,KAAD,EAAQ,YAAW;AACzBC,IAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAY;AAChER,MAAAA,wBAAwB,CACtB,KADsB,EAEtB,6GAFsB,CAAxB;AAID,KALC,CAAF;AAMD,GAPO,CAAR;AAUAO,EAAAA,QAAQ,CAAC,KAAD,EAAQ,YAAW;AACzBC,IAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAY;AAChER,MAAAA,wBAAwB,CACtB,KADsB,EAEtB,wHAFsB,CAAxB;AAID,KALC,CAAF;AAOAQ,IAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAY;AACzDR,MAAAA,wBAAwB,CACtB,YADsB,EAEtB,sJAFsB,CAAxB;AAID,KALC,CAAF;AAOAQ,IAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAY;AAChER,MAAAA,wBAAwB,CACtB,iBADsB,EAEtB,oJAFsB,CAAxB;AAID,KALC,CAAF;AAMD,GArBO,CAAR;AAuBD,CApEO,CAAR","sourcesContent":["import dogescript from '../index';\r\n\r\nfunction expectInvalidSyntaxError(source, errorMessage) {\r\n  var test = function() {\r\n    return dogescript(source, true);\r\n  };\r\n\r\n  expect(test).toThrow(new SyntaxError(errorMessage));\r\n}\r\n\r\n\r\ndescribe(\"Syntax Errors\", function() {\r\n  describe(\"with\", function() {\r\n    it(\"'plz foo with' without arguments throws syntax error\", function () {\r\n      expectInvalidSyntaxError(\r\n        'plz foo with',\r\n        \"Expected arguments but got nothing. Allowed construct: with [args]. Parsed tokens [plz,foo,with] from input \\\"plz foo with\\\"\"\r\n      );\r\n    });\r\n\r\n    it(\"'dose y with' without arguments throws syntax error\", function () {\r\n        expectInvalidSyntaxError(\r\n          'dose y with',\r\n          'Expected arguments but got nothing. Allowed construct: with [args]. Parsed tokens [dose,y,with] from input \\\"dose y with\\\"'\r\n        );\r\n    });\r\n\r\n    it(\"'very foo is plz bar with' without arguments throws syntax error\", function (){\r\n        expectInvalidSyntaxError(\r\n          'very foo is plz bar with',\r\n          \"Expected arguments but got nothing. Allowed construct: with [args]. Parsed tokens [very,foo,is,plz,bar,with] from input \\\"very foo is plz bar with\\\"\"\r\n        );\r\n    });\r\n  });\r\n\r\n\r\n  describe(\"levl\", function() {\r\n    it(\"'levl' without argument throws syntax error\", function () {\r\n      expectInvalidSyntaxError(\r\n        'array levl',\r\n        \"Expected argument but got nothing. Allowed construct: obj levl [arg]. Parsed tokens [array,levl] from input \\\"array levl\\\"\"\r\n      );\r\n    });\r\n  });\r\n\r\n\r\n  describe(\"git\", function() {\r\n    it(\"'git' without function name throws syntax error\", function () {\r\n      expectInvalidSyntaxError(\r\n        'git',\r\n        \"Expected getter name but got nothing. Allowed construct: git [name]. Parsed tokens [git] from input \\\"git\\\"\"\r\n      );\r\n    });\r\n  });\r\n\r\n\r\n  describe(\"sit\", function() {\r\n    it(\"'sit' without function name throws syntax error\", function () {\r\n      expectInvalidSyntaxError(\r\n        'sit',\r\n        'Expected setter name but got nothing. Allowed construct: sit [name] with [arg]. Parsed tokens [sit] from input \\\"sit\\\"'\r\n      );\r\n    });\r\n\r\n    it(\"'sit' without 'with' throws syntax error\", function () {\r\n      expectInvalidSyntaxError(\r\n        'sit fnName',\r\n        \"Expected: 'with' but got: 'undefined' from chain: []. Allowed construct: sit [name] with [arg]. Parsed tokens [sit,fnName] from input \\\"sit fnName\\\"\"\r\n      );\r\n    });\r\n\r\n    it(\"'sit' without an argument throws a syntax error\", function () {\r\n      expectInvalidSyntaxError(\r\n        'sit fnName with',\r\n        \"Expected setter argument but got nothing. Allowed construct: sit [name] with [arg]. Parsed tokens [sit,fnName,with] from input \\\"sit fnName with\\\"\",\r\n      );\r\n    });\r\n  });\r\n\r\n});\r\n"]}