{"version":3,"sources":["util.js"],"names":["path","require","fs","TMP_FOLDER_LOCATION","join","__dirname","existsSync","mkdirSync","cleanCRLF","str","trim","replace","readCleanCRLF","fpath","readFileSync","getTmpfilePath","name","writeTmpFile","content","writeFileSync","readTmpFile","fullPath","deleteTmpFolder","Exception","readdirSync","forEach","file","curPath","isDirectory","lstatSync","unlinkSync","rmdirSync","module","exports"],"mappings":";;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAIE,mBAAmB,GAAGH,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,MAA3B,EAAmC,KAAnC,CAA1B;AAEA,CAACH,EAAE,CAACI,UAAH,CAAcH,mBAAd,CAAD,IAAuCD,EAAE,CAACK,SAAH,CAAaJ,mBAAb,CAAvC;;AAEA,SAASK,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAOA,GAAG,CAACC,IAAJ,GAAWC,OAAX,CAAmB,QAAnB,EAA6B,IAA7B,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOX,EAAE,CAACY,YAAH,CAAgBD,KAAhB,EAAuB,MAAvB,EACJH,IADI,GAEJC,OAFI,CAEI,QAFJ,EAEc,IAFd,CAAP;AAGD;;AAED,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAOhB,IAAI,CAACI,IAAL,CAAUD,mBAAV,EAA+Ba,IAA/B,CAAP;AACD;;AAED,SAASC,YAAT,CAAsBD,IAAtB,EAA4BE,OAA5B,EAAqC;AACnC;AACA,GAAChB,EAAE,CAACI,UAAH,CAAcH,mBAAd,CAAD,IAAuCD,EAAE,CAACK,SAAH,CAAaJ,mBAAb,CAAvC,CAFmC,CAInC;;AACAD,EAAAA,EAAE,CAACiB,aAAH,CACEnB,IAAI,CAACI,IAAL,CAAUD,mBAAV,EAA+Ba,IAA/B,CADF,EAEEE,OAFF;AAID;;AAED,SAASE,WAAT,CAAqBJ,IAArB,EAA2B;AACzB,MAAIK,QAAQ,GAAGrB,IAAI,CAACI,IAAL,CAAUD,mBAAV,EAA+Ba,IAA/B,CAAf;AACA,SAAOd,EAAE,CAACY,YAAH,CAAgBO,QAAhB,EAA0B,MAA1B,CAAP;AACD;;AAED,SAASC,eAAT,GAA2B;AACzB,MAAI,CAACpB,EAAE,CAACI,UAAH,CAAcH,mBAAd,CAAL,EAAyC;AACvC,UAAM,IAAIoB,SAAJ,CAAc,+BAA+BpB,mBAA7C,CAAN;AACD;;AAEDD,EAAAA,EAAE,CAACsB,WAAH,CAAerB,mBAAf,EAAoCsB,OAApC,CAA4C,UAASC,IAAT,EAAc;AACxD,QAAIC,OAAO,GAAG3B,IAAI,CAACI,IAAL,CAAUD,mBAAV,EAA+BuB,IAA/B,CAAd;AACA,QAAIE,WAAW,GAAG1B,EAAE,CAAC2B,SAAH,CAAaF,OAAb,EAAsBC,WAAtB,EAAlB;;AAEA,QAAIA,WAAJ,EAAiB;AAAE;AACjBN,MAAAA,eAAe,CAACK,OAAD,CAAf;AACD,KAFD,MAEO;AAAE;AACPzB,MAAAA,EAAE,CAAC4B,UAAH,CAAcH,OAAd;AACD;AACF,GATD,EALyB,CAgBzB;;AACAzB,EAAAA,EAAE,CAAC6B,SAAH,CAAa5B,mBAAb;AACD;;AAAA;AAED6B,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,SAAS,EAATA,SADe;AAEfc,EAAAA,eAAe,EAAfA,eAFe;AAGfP,EAAAA,cAAc,EAAdA,cAHe;AAIfH,EAAAA,aAAa,EAAbA,aAJe;AAKfQ,EAAAA,WAAW,EAAXA,WALe;AAMfjB,EAAAA,mBAAmB,EAAnBA,mBANe;AAOfc,EAAAA,YAAY,EAAZA;AAPe,CAAjB","sourcesContent":["var path = require(\"path\");\r\nvar fs = require(\"fs\")\r\n\r\nvar TMP_FOLDER_LOCATION = path.join(__dirname, '..', 'test', 'tmp');\r\n\r\n!fs.existsSync(TMP_FOLDER_LOCATION) && fs.mkdirSync(TMP_FOLDER_LOCATION);\r\n\r\nfunction cleanCRLF(str) {\r\n  return str.trim().replace(/\\r\\n/gm, '\\n');\r\n}\r\n\r\nfunction readCleanCRLF(fpath) {\r\n  return fs.readFileSync(fpath, 'utf8')\r\n    .trim()\r\n    .replace(/\\r\\n/gm, '\\n');\r\n}\r\n\r\nfunction getTmpfilePath(name) {\r\n  return path.join(TMP_FOLDER_LOCATION, name)\r\n}\r\n\r\nfunction writeTmpFile(name, content) {\r\n  // Create the tmp directory if it doesn't exist\r\n  !fs.existsSync(TMP_FOLDER_LOCATION) && fs.mkdirSync(TMP_FOLDER_LOCATION);\r\n\r\n  // Write the metadata to a file\r\n  fs.writeFileSync(\r\n    path.join(TMP_FOLDER_LOCATION, name),\r\n    content,\r\n  );\r\n}\r\n\r\nfunction readTmpFile(name) {\r\n  var fullPath = path.join(TMP_FOLDER_LOCATION, name)\r\n  return fs.readFileSync(fullPath, 'utf8');\r\n}\r\n\r\nfunction deleteTmpFolder() {\r\n  if (!fs.existsSync(TMP_FOLDER_LOCATION)) {\r\n    throw new Exception(\"Failed to delete files in \" + TMP_FOLDER_LOCATION);\r\n  }\r\n\r\n  fs.readdirSync(TMP_FOLDER_LOCATION).forEach(function(file){\r\n    var curPath = path.join(TMP_FOLDER_LOCATION, file);\r\n    var isDirectory = fs.lstatSync(curPath).isDirectory();\r\n\r\n    if (isDirectory) { // recurse\r\n      deleteTmpFolder(curPath);\r\n    } else { // Single file, delete it\r\n      fs.unlinkSync(curPath);\r\n    }\r\n  });\r\n\r\n  // Finally, erase the folder\r\n  fs.rmdirSync(TMP_FOLDER_LOCATION);\r\n};\r\n\r\nmodule.exports = {\r\n  cleanCRLF,\r\n  deleteTmpFolder,\r\n  getTmpfilePath,\r\n  readCleanCRLF,\r\n  readTmpFile,\r\n  TMP_FOLDER_LOCATION,\r\n  writeTmpFile,\r\n}"]}