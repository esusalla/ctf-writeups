{"version":3,"sources":["functionHandlers.js"],"names":["tokenUtils","require","handlerUtils","handleSuch","parseContext","expectToken","tokens","shift","functionName","statement","Error","parseInfo","handleMuchArgs","declareArguments","handleLambda","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,UAAU;AAAA;AAAA,uBAAGC,OAAO,CAAC,oBAAD,CAAV,CAAd;AACA,IAAIC,YAAY;AAAA;AAAA,uBAAGD,OAAO,CAAC,sBAAD,CAAV,CAAhB;AAEA;;;;;;;;AAOA,SAASE,UAAT,CAAoBC,YAApB,EACA;AAAA;AAAA;AAAA;AACEJ,EAAAA,UAAU,CAACK,WAAX,CAAuB,MAAvB,EAA+BD,YAA/B;AAEA,MAAIE,MAAM;AAAA;AAAA,yBAAGF,YAAY,CAACE,MAAhB,CAAV,CAHF,CAKE;;AALF;AAAA;AAMEA,EAAAA,MAAM,CAACC,KAAP;AAEA,MAAIC,YAAY;AAAA;AAAA,yBAAGF,MAAM,CAACC,KAAP,EAAH,CAAhB;AACA,MAAIE,SAAS;AAAA;AAAA,yBAAG,cAAcD,YAAjB,CAAb,CATF,CAWE;;AAXF;AAAA;;AAYE,MAAI,CAACF,MAAM,CAAC,CAAD,CAAX,EACA;AAAA;AAAA;AAAA;AACE,WAAOG,SAAS,GAAG,UAAnB;AACD,GAHD;AAAA;AAAA;AAAA;AAAA,GAZF,CAiBE;;;AAjBF;;AAkBE,MAAIH,MAAM,CAAC,CAAD,CAAN,KAAc,MAAlB,EACA;AAAA;AAAA;AAAA;AACE,UAAM,IAAII,KAAJ;AAAA;AAAA,8DAA6DJ,MAAM,CAAC,CAAD,CAAnE,4BAAwFA,MAAxF,wEAA4JN,UAAU,CAACW,SAAX,CAAqBP,YAArB,CAA5J,EAAN;AACD,GAHD;AAAA;AAAA;AAAA;AAAA;;AAlBF;AAuBEK,EAAAA,SAAS,IAAIG,cAAc,CAACR,YAAD,CAA3B;;AAvBF;AAAA;AAwBE,SAAOK,SAAP;AACD;AAED;;;;;;;;;;;;AAUA,SAASG,cAAT,CAAwBR,YAAxB,EACA;AAAA;AAAA;AAAA;AACEJ,EAAAA,UAAU,CAACK,WAAX,CAAuB,MAAvB,EAA+BD,YAA/B,EADF,CAGE;;AAHF;AAAA;AAIEA,EAAAA,YAAY,CAACE,MAAb,CAAoBC,KAApB;;AAJF;AAAA;AAME,SAAOL,YAAY,CAACW,gBAAb,CAA8BT,YAA9B,CAAP;AACD;AAED;;;;;;;;;AAOA,SAASU,YAAT,CAAsBV,YAAtB,EACA;AAAA;AAAA;AAAA;AACE,SAAO,aAAaQ,cAAc,CAACR,YAAD,CAAlC;AACD;;;;AAEDW,MAAM,CAACC,OAAP,GAAgB;AACZb,EAAAA,UAAU,EAAVA,UADY;AAEZW,EAAAA,YAAY,EAAZA;AAFY,CAAhB","sourcesContent":["var tokenUtils = require('../util/tokenUtils');\r\nvar handlerUtils = require('../util/handlerUtils');\r\n\r\n/**\r\n * Handles the such construct:\r\n *  such <function_name> [much]\r\n *\r\n * Produces:\r\n *  function <function_name> ([args]) {\r\n */\r\nfunction handleSuch(parseContext)\r\n{\r\n  tokenUtils.expectToken('such', parseContext);\r\n\r\n  var tokens = parseContext.tokens;\r\n\r\n  // consume: such\r\n  tokens.shift();\r\n\r\n  var functionName = tokens.shift();\r\n  var statement = 'function ' + functionName;\r\n\r\n  // no args\r\n  if (!tokens[0])\r\n  {\r\n    return statement + ' () { \\n';\r\n  }\r\n\r\n  // args have to be declared with much\r\n  if (tokens[0] !== 'much')\r\n  {\r\n    throw new Error(`Invalid parse state! Expected: 'much' but got: '${tokens[0]}' from chain: [${tokens}]. Allowed construct 'such <function_name> [much <args>]'. ${tokenUtils.parseInfo(parseContext)}`);\r\n  }\r\n\r\n  statement += handleMuchArgs(parseContext);\r\n  return statement;\r\n}\r\n\r\n/**\r\n * Handles arguments to functions:\r\n *  much [args]\r\n *\r\n * Produces the argument part to a preceding function:\r\n *  ([args]) {\r\n *\r\n * Assuming that the function_name was encountered before this should ultimately produce:\r\n *  function([args]) {\r\n */\r\nfunction handleMuchArgs(parseContext)\r\n{\r\n  tokenUtils.expectToken('much', parseContext);\r\n\r\n  // consume: much\r\n  parseContext.tokens.shift();\r\n\r\n  return handlerUtils.declareArguments(parseContext);\r\n}\r\n\r\n/**\r\n * Handles lambda functions ( thanks @00Davo!):\r\n *  much [args]\r\n *\r\n * Produces:\r\n *  function (args) {\r\n */\r\nfunction handleLambda(parseContext)\r\n{\r\n  return 'function' + handleMuchArgs(parseContext);\r\n}\r\n\r\nmodule.exports= {\r\n    handleSuch,\r\n    handleLambda\r\n}"]}