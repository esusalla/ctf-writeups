f8b05d2eaeabe46ae4cd6a6ef54374ff
/* istanbul ignore next */
"use strict";

var cov_1aqvk0sxhg = function () {
  var path = "/mnt/j/Workspaces/dogescript/lib/util/handlerUtils.js";
  var hash = "dffd78cbd4d77c17d66c6208ff27bb9a6b92cb69";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/j/Workspaces/dogescript/lib/util/handlerUtils.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 36
        }
      },
      "1": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 24
        }
      },
      "2": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "3": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "4": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 20,
          column: 7
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "6": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "8": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "declareArguments",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 25
          }
        },
        loc: {
          start: {
            line: 9,
            column: 40
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }, {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "dffd78cbd4d77c17d66c6208ff27bb9a6b92cb69"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

/**
 * Creates the statement needed when declaring arguments.
 *
 * Given: [a, b, c]
 *
 * Produces:
 * ' (a, b, c) { \n'
 */
function declareArguments(parseContext) {
  /* istanbul ignore next */
  cov_1aqvk0sxhg.f[0]++;
  var tokens =
  /* istanbul ignore next */
  (cov_1aqvk0sxhg.s[0]++, parseContext.tokens);
  var statement =
  /* istanbul ignore next */
  (cov_1aqvk0sxhg.s[1]++, ' (');
  var arg;

  /* istanbul ignore next */
  cov_1aqvk0sxhg.s[2]++;

  while (arg = tokens.shift()) {
    /* istanbul ignore next */
    cov_1aqvk0sxhg.s[3]++;
    statement += arg;

    /* istanbul ignore next */
    cov_1aqvk0sxhg.s[4]++;

    if (tokens.length > 0) {
      /* istanbul ignore next */
      cov_1aqvk0sxhg.b[0][0]++;
      cov_1aqvk0sxhg.s[5]++;
      statement += ', ';
    } else
    /* istanbul ignore next */
    {
      cov_1aqvk0sxhg.b[0][1]++;
    }
  }

  /* istanbul ignore next */
  cov_1aqvk0sxhg.s[6]++;
  statement += ') { \n';

  /* istanbul ignore next */
  cov_1aqvk0sxhg.s[7]++;
  return statement;
}

/* istanbul ignore next */
cov_1aqvk0sxhg.s[8]++;
module.exports = {
  declareArguments: declareArguments
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXJVdGlscy5qcyJdLCJuYW1lcyI6WyJkZWNsYXJlQXJndW1lbnRzIiwicGFyc2VDb250ZXh0IiwidG9rZW5zIiwic3RhdGVtZW50IiwiYXJnIiwic2hpZnQiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7QUFRQSxTQUFTQSxnQkFBVCxDQUEwQkMsWUFBMUIsRUFBd0M7QUFBQTtBQUFBO0FBQ3BDLE1BQUlDLE1BQU07QUFBQTtBQUFBLDBCQUFHRCxZQUFZLENBQUNDLE1BQWhCLENBQVY7QUFFQSxNQUFJQyxTQUFTO0FBQUE7QUFBQSwwQkFBRyxJQUFILENBQWI7QUFDQSxNQUFJQyxHQUFKOztBQUpvQztBQUFBOztBQUtwQyxTQUFNQSxHQUFHLEdBQUdGLE1BQU0sQ0FBQ0csS0FBUCxFQUFaLEVBQ0E7QUFBQTtBQUFBO0FBQ0VGLElBQUFBLFNBQVMsSUFBSUMsR0FBYjs7QUFERjtBQUFBOztBQUVFLFFBQUdGLE1BQU0sQ0FBQ0ksTUFBUCxHQUFnQixDQUFuQixFQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0VILE1BQUFBLFNBQVMsSUFBSSxJQUFiO0FBQ0QsS0FIRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUQ7O0FBWm1DO0FBQUE7QUFhcENBLEVBQUFBLFNBQVMsSUFBSSxRQUFiOztBQWJvQztBQUFBO0FBY3BDLFNBQU9BLFNBQVA7QUFDRDs7OztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRVIsRUFBQUEsZ0JBQWdCLEVBQWhCQTtBQUFGLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZXMgdGhlIHN0YXRlbWVudCBuZWVkZWQgd2hlbiBkZWNsYXJpbmcgYXJndW1lbnRzLlxyXG4gKlxyXG4gKiBHaXZlbjogW2EsIGIsIGNdXHJcbiAqXHJcbiAqIFByb2R1Y2VzOlxyXG4gKiAnIChhLCBiLCBjKSB7IFxcbidcclxuICovXHJcbmZ1bmN0aW9uIGRlY2xhcmVBcmd1bWVudHMocGFyc2VDb250ZXh0KSB7XHJcbiAgICB2YXIgdG9rZW5zID0gcGFyc2VDb250ZXh0LnRva2VucztcclxuICBcclxuICAgIHZhciBzdGF0ZW1lbnQgPSAnICgnO1xyXG4gICAgbGV0IGFyZztcclxuICAgIHdoaWxlKGFyZyA9IHRva2Vucy5zaGlmdCgpKVxyXG4gICAge1xyXG4gICAgICBzdGF0ZW1lbnQgKz0gYXJnO1xyXG4gICAgICBpZih0b2tlbnMubGVuZ3RoID4gMClcclxuICAgICAge1xyXG4gICAgICAgIHN0YXRlbWVudCArPSAnLCAnO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBzdGF0ZW1lbnQgKz0gJykgeyBcXG4nO1xyXG4gICAgcmV0dXJuIHN0YXRlbWVudDtcclxuICB9XHJcblxyXG4gIG1vZHVsZS5leHBvcnRzID0geyBkZWNsYXJlQXJndW1lbnRzIH0iXX0=